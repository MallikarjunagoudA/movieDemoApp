// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using movieDemoApp;

#nullable disable

namespace movieDemoApp.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20221024075514_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CinemaHallMovie", b =>
                {
                    b.Property<int>("cinemaHallsId")
                        .HasColumnType("int");

                    b.Property<int>("cinemasId")
                        .HasColumnType("int");

                    b.HasKey("cinemaHallsId", "cinemasId");

                    b.HasIndex("cinemasId");

                    b.ToTable("CinemaHallMovie");

                    b.HasData(
                        new
                        {
                            cinemaHallsId = 3,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 4,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 1,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 2,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 5,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 6,
                            cinemasId = 5
                        },
                        new
                        {
                            cinemaHallsId = 7,
                            cinemasId = 5
                        });
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.Property<int>("cinemasId")
                        .HasColumnType("int");

                    b.Property<int>("genresId")
                        .HasColumnType("int");

                    b.HasKey("cinemasId", "genresId");

                    b.HasIndex("genresId");

                    b.ToTable("GenreMovie");

                    b.HasData(
                        new
                        {
                            cinemasId = 1,
                            genresId = 1
                        },
                        new
                        {
                            cinemasId = 1,
                            genresId = 4
                        },
                        new
                        {
                            cinemasId = 2,
                            genresId = 2
                        },
                        new
                        {
                            cinemasId = 3,
                            genresId = 4
                        },
                        new
                        {
                            cinemasId = 3,
                            genresId = 1
                        },
                        new
                        {
                            cinemasId = 3,
                            genresId = 3
                        },
                        new
                        {
                            cinemasId = 4,
                            genresId = 4
                        },
                        new
                        {
                            cinemasId = 4,
                            genresId = 1
                        },
                        new
                        {
                            cinemasId = 4,
                            genresId = 3
                        },
                        new
                        {
                            cinemasId = 5,
                            genresId = 4
                        },
                        new
                        {
                            cinemasId = 5,
                            genresId = 1
                        },
                        new
                        {
                            cinemasId = 5,
                            genresId = 5
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Biograpy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("Date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biograpy = "Thomas Stanley Holland (born 1 June 1996) is an English actor. He is recipient of several accolades, including the 2017 BAFTA Rising Star Award. Holland began his acting career as a child actor on the West End stage in Billy Elliot the Musical at the Victoria Palace Theatre in 2008, playing a supporting part",
                            DOB = new DateTime(1996, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tom Holland"
                        },
                        new
                        {
                            Id = 2,
                            Biograpy = "Samuel Leroy Jackson (born December 21, 1948) is an American actor and producer. One of the most widely recognized actors of his generation, the films in which he has appeared have collectively grossed over $27 billion worldwide, making him the highest-grossing actor of all time (excluding cameo appearances and voice roles).",
                            DOB = new DateTime(1948, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samuel L. Jackson"
                        },
                        new
                        {
                            Id = 3,
                            Biograpy = "Robert John Downey Jr. (born April 4, 1965) is an American actor and producer. His career has been characterized by critical and popular success in his youth, followed by a period of substance abuse and legal troubles, before a resurgence of commercial success later in his career.",
                            DOB = new DateTime(1965, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Robert Downey Jr."
                        },
                        new
                        {
                            Id = 4,
                            DOB = new DateTime(1981, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chris Evans"
                        },
                        new
                        {
                            Id = 5,
                            DOB = new DateTime(1972, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dwayne Johnson"
                        },
                        new
                        {
                            Id = 6,
                            DOB = new DateTime(2000, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Auli'i Cravalho"
                        },
                        new
                        {
                            Id = 7,
                            DOB = new DateTime(1984, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Scarlett Johansson"
                        },
                        new
                        {
                            Id = 8,
                            DOB = new DateTime(1964, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keanu Reeves"
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.Cinema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Point>("location")
                        .HasColumnType("geography");

                    b.HasKey("Id");

                    b.ToTable("cinemas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Agora Mall",
                            location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-69.9388777 18.4839233)")
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sambil",
                            location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-69.911582 18.482455)")
                        },
                        new
                        {
                            Id = 3,
                            Name = "Megacentro",
                            location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-69.856309 18.506662)")
                        },
                        new
                        {
                            Id = 4,
                            Name = "Acropolis",
                            location = (NetTopologySuite.Geometries.Point)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POINT (-69.939248 18.469649)")
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.CinemaHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CinemaHallTypes")
                        .HasColumnType("int");

                    b.Property<int>("cinemaid")
                        .HasColumnType("int");

                    b.Property<decimal>("cost")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("cinemaid");

                    b.ToTable("cinemaHalls");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            CinemaHallTypes = 1,
                            cinemaid = 3,
                            cost = 250m
                        },
                        new
                        {
                            Id = 6,
                            CinemaHallTypes = 2,
                            cinemaid = 3,
                            cost = 330m
                        },
                        new
                        {
                            Id = 7,
                            CinemaHallTypes = 3,
                            cinemaid = 3,
                            cost = 450m
                        },
                        new
                        {
                            Id = 8,
                            CinemaHallTypes = 1,
                            cinemaid = 4,
                            cost = 250m
                        },
                        new
                        {
                            Id = 1,
                            CinemaHallTypes = 1,
                            cinemaid = 1,
                            cost = 220m
                        },
                        new
                        {
                            Id = 2,
                            CinemaHallTypes = 2,
                            cinemaid = 1,
                            cost = 320m
                        },
                        new
                        {
                            Id = 3,
                            CinemaHallTypes = 1,
                            cinemaid = 2,
                            cost = 200m
                        },
                        new
                        {
                            Id = 4,
                            CinemaHallTypes = 2,
                            cinemaid = 2,
                            cost = 290m
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.CinemaOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("Date");

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPercentage")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId")
                        .IsUnique();

                    b.ToTable("cinemaOffers");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Begin = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CinemaId = 4,
                            DiscountPercentage = 15m,
                            End = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 1,
                            Begin = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CinemaId = 1,
                            DiscountPercentage = 10m,
                            End = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Animation"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("InCinemas")
                        .HasColumnType("bit");

                    b.Property<string>("PosterUrl")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("RelaseDate")
                        .HasColumnType("Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InCinemas = false,
                            PosterUrl = "https://upload.wikimedia.org/wikipedia/en/8/8a/The_Avengers_%282012_film%29_poster.jpg",
                            RelaseDate = new DateTime(2012, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 2,
                            InCinemas = false,
                            PosterUrl = "https://upload.wikimedia.org/wikipedia/en/9/98/Coco_%282017_film%29_poster.jpg",
                            RelaseDate = new DateTime(2017, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Coco"
                        },
                        new
                        {
                            Id = 3,
                            InCinemas = false,
                            PosterUrl = "https://upload.wikimedia.org/wikipedia/en/0/00/Spider-Man_No_Way_Home_poster.jpg",
                            RelaseDate = new DateTime(2022, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spider-Man: No way home"
                        },
                        new
                        {
                            Id = 4,
                            InCinemas = false,
                            PosterUrl = "https://upload.wikimedia.org/wikipedia/en/0/00/Spider-Man_No_Way_Home_poster.jpg",
                            RelaseDate = new DateTime(2019, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spider-Man: Far From Home"
                        },
                        new
                        {
                            Id = 5,
                            InCinemas = true,
                            PosterUrl = "https://upload.wikimedia.org/wikipedia/en/5/50/The_Matrix_Resurrections.jpg",
                            RelaseDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix Resurrections"
                        });
                });

            modelBuilder.Entity("movieDemoApp.Entities.MovieActor", b =>
                {
                    b.Property<int>("movieid")
                        .HasColumnType("int");

                    b.Property<int>("actorid")
                        .HasColumnType("int");

                    b.Property<string>("character")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("order")
                        .HasColumnType("int");

                    b.HasKey("movieid", "actorid");

                    b.HasIndex("actorid");

                    b.ToTable("movieActors");

                    b.HasData(
                        new
                        {
                            movieid = 4,
                            actorid = 2,
                            character = "Samuel L. Jackson",
                            order = 2
                        },
                        new
                        {
                            movieid = 4,
                            actorid = 1,
                            character = "Peter Parker",
                            order = 1
                        },
                        new
                        {
                            movieid = 3,
                            actorid = 1,
                            character = "Peter Parker",
                            order = 1
                        },
                        new
                        {
                            movieid = 1,
                            actorid = 3,
                            character = "Iron Man",
                            order = 2
                        },
                        new
                        {
                            movieid = 1,
                            actorid = 7,
                            character = "Black Widow",
                            order = 3
                        },
                        new
                        {
                            movieid = 1,
                            actorid = 4,
                            character = "Capitán América",
                            order = 1
                        },
                        new
                        {
                            movieid = 5,
                            actorid = 8,
                            character = "Neo",
                            order = 1
                        });
                });

            modelBuilder.Entity("CinemaHallMovie", b =>
                {
                    b.HasOne("movieDemoApp.Entities.CinemaHall", null)
                        .WithMany()
                        .HasForeignKey("cinemaHallsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movieDemoApp.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("cinemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreMovie", b =>
                {
                    b.HasOne("movieDemoApp.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("cinemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movieDemoApp.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("genresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("movieDemoApp.Entities.CinemaHall", b =>
                {
                    b.HasOne("movieDemoApp.Entities.Cinema", "cinema")
                        .WithMany("cinemaHalls")
                        .HasForeignKey("cinemaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cinema");
                });

            modelBuilder.Entity("movieDemoApp.Entities.CinemaOffer", b =>
                {
                    b.HasOne("movieDemoApp.Entities.Cinema", null)
                        .WithOne("cinemaOffer")
                        .HasForeignKey("movieDemoApp.Entities.CinemaOffer", "CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("movieDemoApp.Entities.MovieActor", b =>
                {
                    b.HasOne("movieDemoApp.Entities.Actor", "actor")
                        .WithMany("movieActors")
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movieDemoApp.Entities.Movie", "movie")
                        .WithMany("movieActors")
                        .HasForeignKey("movieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("actor");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("movieDemoApp.Entities.Actor", b =>
                {
                    b.Navigation("movieActors");
                });

            modelBuilder.Entity("movieDemoApp.Entities.Cinema", b =>
                {
                    b.Navigation("cinemaHalls");

                    b.Navigation("cinemaOffer");
                });

            modelBuilder.Entity("movieDemoApp.Entities.Movie", b =>
                {
                    b.Navigation("movieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
